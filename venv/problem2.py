#!/usr/bin/python
#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.



import time

start = time.time()
k = [1, 2]
i = 0
j = 1

while i < 4000000:

    i = (k[j]+k[j-1])

    if i < 4000000:
        k.append(i)

    j = j+1

s = sum(x for x in k if(x % 2 == 0))
print(k)





elapsed = time.time() - start

print ("result %s returned in %s seconds" % (s, elapsed))
